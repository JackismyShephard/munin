[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "munin"
version = "0.0.1"
description = "Munin"
readme = "README.md"
requires-python = "==3.12.*"
dependencies = [
    #Validation
    "pydantic==2.11.3",
    # Networking
    "requests==2.32.3",
]

[tool.uv]
environments = ["sys_platform == 'win32'", "sys_platform == 'linux'"]
cache-dir = "./uv/cache"
compile-bytecode = true

[tool.pyright]
stubPath = "src/munin/stubs"
pythonVersion = "3.12"
pythonPlatform = "All"
typeCheckingMode = "strict"
ignore = ["**/.venv"]
exclude = ["./uv"]

[tool.black]
target-version = ['py312']
preview = true
enable-unstable-feature = ["string_processing"]

[tool.ruff]
target-version = "py312"
fix = true
required-version = ">=0.5.7"

[tool.ruff.format]
docstring-code-format = true
preview = true

[tool.ruff.lint]
select = ["ALL"]
extend-select = ["I"]
ignore = [
    # Ignore missing blank before between class name and docstring
    "D203", 
    # Do not require a description after summary line in docstring
    "D205",
    # Do not require summary line to be located on first physical line of docstring
    "D212", 
    # Do not require docstring section names to end with colon
    "D416",  
    # Ignore TODO notes
    "FIX002",
    "TD002",
    "TD003",
    "TD004",
    # Ignore missing copyright notice
    "CPY001", 
    # Ignore function signatures with too many arguments
    "PLR0913",
    # ignore function signatures with too many positional arguments
    "PLR0917", 
    # Ignore boolean positional argument in function signature
    "FBT002", 
    "FBT001",
]
unfixable = ["F401"]
preview = true

[tool.ruff.lint.flake8-annotations]
#ignore-fully-untyped = true

[tool.ruff.lint.isort]
relative-imports-order = "closest-to-furthest"
section-order = [
    "future",
    "typing",
    "standard-library",
    "third-party",
    "networking",
    "validation",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
"typing" = ["typing", "typing_extensions"]
"networking" = [
    "requests",
    "wget",
    "flask",
    "beautifulsoup4",
]
"validation" = ["pydantic"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 72
